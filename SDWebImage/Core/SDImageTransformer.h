/*
 * This file is part of the SDWebImage package.
 * (c) Olivier Poitrey <rs@dailymotion.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

#import "SDWebImageCompat.h"
#import "UIImage+Transform.h"

/**
 Return the transformed cache key which applied with specify transformerKey.
 返回与指定的transformerKey一起应用的转换后的缓存键

 @param key The original cache key - 原始缓存key
 @param transformerKey The transformer key from the transformer - 变换中的key
 @return The transformed cache key - 变换的缓存key
 */
FOUNDATION_EXPORT NSString * _Nullable SDTransformedKeyForKey(NSString * _Nullable key, NSString * _Nonnull transformerKey);

/**
 Return the thumbnailed cache key which applied with specify thumbnailSize and preserveAspectRatio control.
 返回应用于指定thumbnailSize和preserveAspectRaito控制的缩略缓存键
 
 @param key The original cache key - 原始缓存key
 @param thumbnailPixelSize The thumbnail pixel size - 缩略像素尺寸
 @param preserveAspectRatio The preserve aspect ratio option - 保持宽高比选项
 @return The thumbnailed cache key - 缩略缓存key
 @note If you have both transformer and thumbnail applied for image, call `SDThumbnailedKeyForKey` firstly and then with `SDTransformedKeyForKey`.`
  当同时将变换和缩略应用于图像时，先调用SDThumbnailedKeyForKey然后再调用SDTransformedKeyForKey
 */
FOUNDATION_EXPORT NSString * _Nullable SDThumbnailedKeyForKey(NSString * _Nullable key, CGSize thumbnailPixelSize, BOOL preserveAspectRatio);

/**
 A transformer protocol to transform the image load from cache or from download. - 变换从缓存和下载中加载的图像的变换协议
 You can provide transformer to cache and manager (Through the `transformer` property or context option `SDWebImageContextImageTransformer`).
 你可以提供转换器来缓存和管理(通过' transformer '属性或上下文选项' SDWebImageContextImageTransformer ')。
 
 @note The transform process is called from a global queue in order to not to block the main queue. - 转换过程从全局队列中调用，以避免阻塞主队列
 */
@protocol SDImageTransformer <NSObject>

@required
/**
 For each transformer, it must contains its cache key to used to store the image cache or query from the cache. This key will be appened after the original cache key generated by URL or from user.
 对于每个转换器，它必须包含用于存储图像缓存或从缓存查询的缓存键。此键将发生在URL或用户生成的原始缓存键之后

 @return The cache key to appended after the original cache key. Should not be nil.
 */
@property (nonatomic, copy, readonly, nonnull) NSString *transformerKey;

/**
 Transform the image to another image. - 将一张图像转换成另一张图像

 @param image The image to be transformed
 @param key The cache key associated to the image. This arg is a hint for image source, not always useful and should be nullable. In the future we will remove this arg.
 @return The transformed image, or nil if transform failed
 */
- (nullable UIImage *)transformedImageWithImage:(nonnull UIImage *)image forKey:(nonnull NSString *)key API_DEPRECATED("The key arg will be removed in the future. Update your code and don't rely on that.", macos(10.10, API_TO_BE_DEPRECATED), ios(8.0, API_TO_BE_DEPRECATED), tvos(9.0, API_TO_BE_DEPRECATED), watchos(2.0, API_TO_BE_DEPRECATED));

@end

#pragma mark - Pipeline

/**
 Pipeline transformer. Which you can bind multiple transformers together to let the image to be transformed one by one in order and generate the final image. - 管道转换器。您可以将多个转换器绑定在一起，让图像依次转换，并生成最终的图像。
 @note Because transformers are lightweight, if you want to append or arrange transformers, create another pipeline transformer instead. This class is considered as immutable. - 因为转换器是轻量级的，所以如果您想要添加或安排转换器，可以创建另一个管道转换器。这个类被认为是不可变的
 */
@interface SDImagePipelineTransformer : NSObject <SDImageTransformer>

/**
 All transformers in pipeline
 */
@property (nonatomic, copy, readonly, nonnull) NSArray<id<SDImageTransformer>> *transformers;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithTransformers:(nonnull NSArray<id<SDImageTransformer>> *)transformers;

@end

// There are some built-in transformers based on the `UIImage+Transformer` category to provide the common image geometry, image blending and image effect process. Those transform are useful for static image only but you can create your own to support animated image as well.
/// 有一些内置的转换器基于“UIImage+Transformer”类别，以提供常见的图像几何，图像混合和图像效果处理。这些转换只对静态图像有用，但你也可以创建自己的动画图像
// Because transformers are lightweight, these class are considered as immutable.
/// 因为transformer是轻量级的，所以这些类被认为是不可变的
#pragma mark - Image Geometry

/**
 Image round corner transformer - 图像圆角转换器
 */
@interface SDImageRoundCornerTransformer: NSObject <SDImageTransformer>

/**
 The radius of each corner oval. Values larger than half the rectangle's width or height are clamped appropriately to half the width or height.
 每个角的椭圆半径。大于矩形宽度或高度一半的值将被适当地固定到宽度或高度的一半。
 */
@property (nonatomic, assign, readonly) CGFloat cornerRadius;

/**
 A bitmask value that identifies the corners that you want rounded. You can use this parameter to round only a subset of the corners of the rectangle.
 位掩码值，它标识要圆角的角。您可以使用此参数只圆角矩形的一个子集
 */
@property (nonatomic, assign, readonly) SDRectCorner corners;

/**
 The inset border line width. Values larger than half the rectangle's width or height are clamped appropriately to half the width or height.
 插入的边框线宽度。大于矩形宽度或高度一半的值将被适当地固定到宽度或高度的一半
 */
@property (nonatomic, assign, readonly) CGFloat borderWidth;

/**
 The border stroke color. nil means clear color.
 边框填充颜色。Nil表示颜色透明。
 */
@property (nonatomic, strong, readonly, nullable) UIColor *borderColor;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithRadius:(CGFloat)cornerRadius corners:(SDRectCorner)corners borderWidth:(CGFloat)borderWidth borderColor:(nullable UIColor *)borderColor;

@end

/**
 Image resizing transformer - 图像重设尺寸变换器
 */
@interface SDImageResizingTransformer : NSObject <SDImageTransformer>

/**
 The new size to be resized, values should be positive.
 要调整的新大小，值应该为正
 */
@property (nonatomic, assign, readonly) CGSize size;

/**
 The scale mode for image content.
 图像内容的缩放模式
 */
@property (nonatomic, assign, readonly) SDImageScaleMode scaleMode;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithSize:(CGSize)size scaleMode:(SDImageScaleMode)scaleMode;

@end

/**
 Image cropping transformer - 图像裁剪变换器
 */
@interface SDImageCroppingTransformer : NSObject <SDImageTransformer>

/**
 Image's inner rect. - 图像内部矩形
 */
@property (nonatomic, assign, readonly) CGRect rect;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithRect:(CGRect)rect;

@end

/**
 Image flipping transformer - 图像翻转变换器
 */
@interface SDImageFlippingTransformer : NSObject <SDImageTransformer>

/**
 YES to flip the image horizontally. ⇋ - 横向转换图像
 */
@property (nonatomic, assign, readonly) BOOL horizontal;

/**
 YES to flip the image vertically. ⥯ - 纵向转换图像
 */
@property (nonatomic, assign, readonly) BOOL vertical;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithHorizontal:(BOOL)horizontal vertical:(BOOL)vertical;

@end

/**
 Image rotation transformer - 图像旋转变换器
 */
@interface SDImageRotationTransformer : NSObject <SDImageTransformer>

/**
 Rotated radians in counterclockwise.⟲ - 逆时针旋转角度
 */
@property (nonatomic, assign, readonly) CGFloat angle;

/**
 YES: new image's size is extend to fit all content. - 新图像的大小被扩展以适应所有内容
 NO: image's size will not change, content may be clipped. - 图像的大小不会改变，内容可能会被剪切
 */
@property (nonatomic, assign, readonly) BOOL fitSize;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithAngle:(CGFloat)angle fitSize:(BOOL)fitSize;

@end

#pragma mark - Image Blending

/**
 Image tint color transformer - 图像色彩转换器
 */
@interface SDImageTintTransformer : NSObject <SDImageTransformer>

/**
 The tint color. - 染色
 */
@property (nonatomic, strong, readonly, nonnull) UIColor *tintColor;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithColor:(nonnull UIColor *)tintColor;

@end

#pragma mark - Image Effect

/**
 Image blur effect transformer - 图像模糊效果转换器
 */
@interface SDImageBlurTransformer : NSObject <SDImageTransformer>

/**
 The radius of the blur in points, 0 means no blur effect. - 模糊的半径以点为单位，0表示没有模糊效果
 */
@property (nonatomic, assign, readonly) CGFloat blurRadius;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithRadius:(CGFloat)blurRadius;

@end

#if SD_UIKIT || SD_MAC
/**
 Core Image filter transformer - 核心图像滤镜转换器
 */
@interface SDImageFilterTransformer: NSObject <SDImageTransformer>

/**
 The CIFilter to be applied to the image. - 应用于图像的核心滤镜
 */
@property (nonatomic, strong, readonly, nonnull) CIFilter *filter;

- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)transformerWithFilter:(nonnull CIFilter *)filter;

@end
#endif
